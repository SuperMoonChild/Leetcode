Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].

#sort the arrays by start 
#output the first location 
#loop through the start and end 
#Get the Last End value 
#compare the lastEnd with the end and get max (if they have overlap) 
#if they do not have overlap, just return the original 
class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        
        #sort the interval by start point 
        intervals.sort(key = lambda x:x[0])
        output = [intervals[0]]
        
        for start,end in intervals[1:]: 
            lastEnd = output[-1][1]
            
            if start <= lastEnd: 
                output[-1][1] = max(lastEnd,end)
            else:
                output.append([start,end])
        return output 
